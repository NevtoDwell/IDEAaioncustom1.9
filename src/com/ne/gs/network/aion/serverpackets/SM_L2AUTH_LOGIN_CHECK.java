/*
 * This file is part of Neon-Eleanor project
 *
 * This is proprietary software. See the EULA file distributed with
 * this project for additional information regarding copyright ownership.
 *
 * Copyright (c) 2011-2013, Neon-Eleanor Team. All rights reserved.
 */
package com.ne.gs.network.aion.serverpackets;

import com.ne.gs.network.aion.AionConnection;
import com.ne.gs.network.aion.AionServerPacket;

/**
 * @author -Nemesiss-
 */
public class SM_L2AUTH_LOGIN_CHECK extends AionServerPacket {

    /**
     * True if client is authed.
     */
    private final boolean ok;
    private final String accountName;
    private static final byte[] unk = hex2Byte


    /**
     * Constructs new <tt>SM_L2AUTH_LOGIN_CHECK </tt> packet
     */
    public SM_L2AUTH_LOGIN_CHECK(boolean ok, String accountName) {
        this.ok = ok;
        this.accountName = accountName;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected void writeImpl(AionConnection con) {
        writeD(ok ? 0x00 : 0x01);
        writeB(unk);
        writeS(accountName);
    }

    private static byte[] hex2Byte(String str) {
        byte[] bytes = new byte[str.length() / 2];
        for (int i = 0; i < bytes.length; i++) {
            bytes[i] = (byte) Integer.parseInt(str.substring(2 * i, 2 * i + 2), 16);
        }
        return bytes;
    }
}
